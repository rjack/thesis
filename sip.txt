				 Appunti SIP.

		     http://www.ietf.org/rfc/rfc3261.txt

  Introduzione

Sessione: scambio di dati tra un'associazione di partecipanti.

Problemi possibili: i partecipanti

- si spostano da un endpoint all'altro
- sono raggiungibili da più nomi
- usano media differenti, anche simultaneamente (es. audio e video)

SIP permette agli user agent di concordare sulle caratteristiche di una
sessione, in modo indipendente dal tipo di sessione da stabilire.


  Panoramica delle funzionalità

SIP è un protocollo di controllo di livello applicazione.

Può:

- stabilire, modificare e terminare sessioni multimediali (videochiamate,
  telefonia, etc.)
- permettere inviti a sessioni esistenti (multiconferenze)
- aggiunta e rimozione di media in corso di sessione
- gestione trasparente di associazioni dei nomi e servizi di redirezione
  (utente può mantenere lo stesso identificativo esterno a prescindere dalla
  rete di appartenenza)

Cinque aspetti per creazione sessione:

1. posizione: a quale endsystem connettersi?
2. disponibilità: vuole ricevere la comunicazione?
3. capacità: quale media si usa, con quali parametri?
4. impostazione: attuare le scelte da entrambe le parti
5. gestione: trasferimento, terminazione, modifica di parametri, invocazioni di
   servizi, etc.

SIP può (deve?) lavorare con altri protocolli:

- RTP e RTSP per trasportare dati audio e video
- SDP per descrivere la sessione
- MEGACO per i gateway dei nodi di telefonia

SIP non offre servizi, ma primitive da usare per implementare servizi.
Es: SIP trova un utente e gli manda un oggetto (primitiva). Il servizio
dipende dall'oggetto spedito.

SIP supporta crittografia, autenticazione e prevenzione dei DoS, etc.


  Panoramica di funzionamento

Funzionalità di base: stabilire e terminare una sessione.

Alice <alice@example.com> chiama Bob <bob@example.net>:

  Alice --INVITE-> proxy.example.com

  Alice <-TRYING-- proxy.example.com --INVITE-> proxy.example.net

  proxy.example.com <-TRYING-- proxy.example.net --INVITE-> Bob

  Alice <-RINGING-- proxy.example.com <-RINGING-- proxy.example.net <-RINGING-- Bob

  Alice <-OK-- proxy.example.com <-OK-- proxy.example.net <-OK-- Bob

Il messaggio INVITE di Alice contiene i parametri proposti per la sessione,
magari scritti in SDP. L'OK di Bob contiene la risposta a questi parametri.

  Alice --ACK-> Bob

  Alice <=bla bla=> Bob

Note: l'instaurazione passa per i proxy, la comunicazione è diretta tra gli
endpoint.

Opzionalmente i proxy possono continuare a rimanere in mezzo alla sessione,
per gestire funzionalità durante la chiamata, gestendo però solo i messaggi di
sessione, non i dati della chiamata.

Registrazione: come gli utenti si registrano al proprio proxy.
Il messaggio REGISTER associa il nome di Bob, cioè <bob@example.net>
all'indirizzo fisico della macchina che sta utilizzando. Database proxy
associa nomi a indirizzi.

Il server che gestisce i binding nome-indirizzo si chiama registrar.

Un singolo utente può registrarsi a con più dispositivi.
Un singolo dispositivo può essere registrato da più utenti.

Registrazione solo per localizzare utente, non per autenticazione e
autorizzazione!


  Struttura del protocollo

Strutturato a strati:

1. sintassi e codifica (sintassi BNF estesa)
2. trasporto: definisce come un client (server) spedisce (riceve) richieste e
   riceve (spedisce) risposte.
3. transazione: concetto di transazione nello scambio di messaggi tra client e
   server.
4. transazione utente

Ruolo centrale: metodo INVITE, per cominciare una sessione.


  Definizioni

Address-of-Record (AOR): URI che punta a un altro URI effettivo di un
utente (AOR = "indirizzo pubblico")


Back-to-Back User Agent (B2BUA): entità logica che riceve come un server e
richiede come un client.


  Messaggi SIP

SIP protocollo testuale, codifica dei caratteri UTF-8.
Molto simile ad HTTP, ma *non* è una sua estensione.

Due tipi:

- richiesta da client a server
- risposta da server a client

A differenza di HTTP, i messaggi SIP possono viaggiare su datagram UDP.


  Comportamento generale degli User Agent

Comportamento, indipendente dal metodo, al di fuori di un dialog.

UAC: richieste

Campi obbligatori: To, From, CSeq, Call-ID, Max-Forwards, Via.
Esempi: INVITE e OPTIONS (per conoscere le funzionalità supportate).
   
_____________________
Segnalibro: pagina 17
